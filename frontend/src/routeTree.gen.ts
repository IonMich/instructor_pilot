/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSubmissionsSubmissionIdImport } from './routes/_authenticated/submissions.$submissionId'
import { Route as AuthenticatedSectionsSectionIdImport } from './routes/_authenticated/sections.$sectionId'
import { Route as AuthenticatedAssignmentsAssignmentIdImport } from './routes/_authenticated/assignments.$assignmentId'
import { Route as AuthenticatedCoursesCourseIdIndexImport } from './routes/_authenticated/courses.$courseId.index'
import { Route as AuthenticatedCoursesCourseIdStudentsStudentIdImport } from './routes/_authenticated/courses.$courseId.students.$studentId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSubmissionsSubmissionIdRoute =
  AuthenticatedSubmissionsSubmissionIdImport.update({
    path: '/submissions/$submissionId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSectionsSectionIdRoute =
  AuthenticatedSectionsSectionIdImport.update({
    path: '/sections/$sectionId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAssignmentsAssignmentIdRoute =
  AuthenticatedAssignmentsAssignmentIdImport.update({
    path: '/assignments/$assignmentId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedCoursesCourseIdIndexRoute =
  AuthenticatedCoursesCourseIdIndexImport.update({
    path: '/courses/$courseId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedCoursesCourseIdStudentsStudentIdRoute =
  AuthenticatedCoursesCourseIdStudentsStudentIdImport.update({
    path: '/courses/$courseId/students/$studentId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/assignments/$assignmentId': {
      id: '/_authenticated/assignments/$assignmentId'
      path: '/assignments/$assignmentId'
      fullPath: '/assignments/$assignmentId'
      preLoaderRoute: typeof AuthenticatedAssignmentsAssignmentIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/sections/$sectionId': {
      id: '/_authenticated/sections/$sectionId'
      path: '/sections/$sectionId'
      fullPath: '/sections/$sectionId'
      preLoaderRoute: typeof AuthenticatedSectionsSectionIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/submissions/$submissionId': {
      id: '/_authenticated/submissions/$submissionId'
      path: '/submissions/$submissionId'
      fullPath: '/submissions/$submissionId'
      preLoaderRoute: typeof AuthenticatedSubmissionsSubmissionIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/courses/$courseId/': {
      id: '/_authenticated/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/courses/$courseId'
      preLoaderRoute: typeof AuthenticatedCoursesCourseIdIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/courses/$courseId/students/$studentId': {
      id: '/_authenticated/courses/$courseId/students/$studentId'
      path: '/courses/$courseId/students/$studentId'
      fullPath: '/courses/$courseId/students/$studentId'
      preLoaderRoute: typeof AuthenticatedCoursesCourseIdStudentsStudentIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAssignmentsAssignmentIdRoute: typeof AuthenticatedAssignmentsAssignmentIdRoute
  AuthenticatedSectionsSectionIdRoute: typeof AuthenticatedSectionsSectionIdRoute
  AuthenticatedSubmissionsSubmissionIdRoute: typeof AuthenticatedSubmissionsSubmissionIdRoute
  AuthenticatedCoursesCourseIdIndexRoute: typeof AuthenticatedCoursesCourseIdIndexRoute
  AuthenticatedCoursesCourseIdStudentsStudentIdRoute: typeof AuthenticatedCoursesCourseIdStudentsStudentIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAssignmentsAssignmentIdRoute:
    AuthenticatedAssignmentsAssignmentIdRoute,
  AuthenticatedSectionsSectionIdRoute: AuthenticatedSectionsSectionIdRoute,
  AuthenticatedSubmissionsSubmissionIdRoute:
    AuthenticatedSubmissionsSubmissionIdRoute,
  AuthenticatedCoursesCourseIdIndexRoute:
    AuthenticatedCoursesCourseIdIndexRoute,
  AuthenticatedCoursesCourseIdStudentsStudentIdRoute:
    AuthenticatedCoursesCourseIdStudentsStudentIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/assignments/$assignmentId': typeof AuthenticatedAssignmentsAssignmentIdRoute
  '/sections/$sectionId': typeof AuthenticatedSectionsSectionIdRoute
  '/submissions/$submissionId': typeof AuthenticatedSubmissionsSubmissionIdRoute
  '/courses/$courseId': typeof AuthenticatedCoursesCourseIdIndexRoute
  '/courses/$courseId/students/$studentId': typeof AuthenticatedCoursesCourseIdStudentsStudentIdRoute
}

interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/assignments/$assignmentId': typeof AuthenticatedAssignmentsAssignmentIdRoute
  '/sections/$sectionId': typeof AuthenticatedSectionsSectionIdRoute
  '/submissions/$submissionId': typeof AuthenticatedSubmissionsSubmissionIdRoute
  '/courses/$courseId': typeof AuthenticatedCoursesCourseIdIndexRoute
  '/courses/$courseId/students/$studentId': typeof AuthenticatedCoursesCourseIdStudentsStudentIdRoute
}

interface FileRoutesById {
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/assignments/$assignmentId': typeof AuthenticatedAssignmentsAssignmentIdRoute
  '/_authenticated/sections/$sectionId': typeof AuthenticatedSectionsSectionIdRoute
  '/_authenticated/submissions/$submissionId': typeof AuthenticatedSubmissionsSubmissionIdRoute
  '/_authenticated/courses/$courseId/': typeof AuthenticatedCoursesCourseIdIndexRoute
  '/_authenticated/courses/$courseId/students/$studentId': typeof AuthenticatedCoursesCourseIdStudentsStudentIdRoute
}

interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/assignments/$assignmentId'
    | '/sections/$sectionId'
    | '/submissions/$submissionId'
    | '/courses/$courseId'
    | '/courses/$courseId/students/$studentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/assignments/$assignmentId'
    | '/sections/$sectionId'
    | '/submissions/$submissionId'
    | '/courses/$courseId'
    | '/courses/$courseId/students/$studentId'
  id:
    | '/_authenticated'
    | '/login'
    | '/_authenticated/'
    | '/_authenticated/assignments/$assignmentId'
    | '/_authenticated/sections/$sectionId'
    | '/_authenticated/submissions/$submissionId'
    | '/_authenticated/courses/$courseId/'
    | '/_authenticated/courses/$courseId/students/$studentId'
  fileRoutesById: FileRoutesById
}

interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/assignments/$assignmentId",
        "/_authenticated/sections/$sectionId",
        "/_authenticated/submissions/$submissionId",
        "/_authenticated/courses/$courseId/",
        "/_authenticated/courses/$courseId/students/$studentId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/assignments/$assignmentId": {
      "filePath": "_authenticated/assignments.$assignmentId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sections/$sectionId": {
      "filePath": "_authenticated/sections.$sectionId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/submissions/$submissionId": {
      "filePath": "_authenticated/submissions.$submissionId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/courses/$courseId/": {
      "filePath": "_authenticated/courses.$courseId.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/courses/$courseId/students/$studentId": {
      "filePath": "_authenticated/courses.$courseId.students.$studentId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
